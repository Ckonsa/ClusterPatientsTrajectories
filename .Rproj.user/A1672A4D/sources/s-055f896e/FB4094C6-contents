// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// collectPatientData
List collectPatientData(DataFrame data, NumericVector IDs, int n);
RcppExport SEXP _ClusterPatientsTrajectories_collectPatientData(SEXP dataSEXP, SEXP IDsSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDs(IDsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(collectPatientData(data, IDs, n));
    return rcpp_result_gen;
END_RCPP
}
// compareDrugTrajectories
NumericMatrix compareDrugTrajectories(List patientsData, NumericVector punishments);
RcppExport SEXP _ClusterPatientsTrajectories_compareDrugTrajectories(SEXP patientsDataSEXP, SEXP punishmentsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type patientsData(patientsDataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type punishments(punishmentsSEXP);
    rcpp_result_gen = Rcpp::wrap(compareDrugTrajectories(patientsData, punishments));
    return rcpp_result_gen;
END_RCPP
}
// compareDrugTrajectoriesWithDTW
NumericMatrix compareDrugTrajectoriesWithDTW(List patientsData, NumericVector punishments);
RcppExport SEXP _ClusterPatientsTrajectories_compareDrugTrajectoriesWithDTW(SEXP patientsDataSEXP, SEXP punishmentsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type patientsData(patientsDataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type punishments(punishmentsSEXP);
    rcpp_result_gen = Rcpp::wrap(compareDrugTrajectoriesWithDTW(patientsData, punishments));
    return rcpp_result_gen;
END_RCPP
}
// countDrugsInCluster
NumericMatrix countDrugsInCluster(DataFrame data, NumericVector IDs, CharacterVector drugs);
RcppExport SEXP _ClusterPatientsTrajectories_countDrugsInCluster(SEXP dataSEXP, SEXP IDsSEXP, SEXP drugsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IDs(IDsSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type drugs(drugsSEXP);
    rcpp_result_gen = Rcpp::wrap(countDrugsInCluster(data, IDs, drugs));
    return rcpp_result_gen;
END_RCPP
}
// normalize
NumericMatrix normalize(NumericMatrix values);
RcppExport SEXP _ClusterPatientsTrajectories_normalize(SEXP valuesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type values(valuesSEXP);
    rcpp_result_gen = Rcpp::wrap(normalize(values));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ClusterPatientsTrajectories_collectPatientData", (DL_FUNC) &_ClusterPatientsTrajectories_collectPatientData, 3},
    {"_ClusterPatientsTrajectories_compareDrugTrajectories", (DL_FUNC) &_ClusterPatientsTrajectories_compareDrugTrajectories, 2},
    {"_ClusterPatientsTrajectories_compareDrugTrajectoriesWithDTW", (DL_FUNC) &_ClusterPatientsTrajectories_compareDrugTrajectoriesWithDTW, 2},
    {"_ClusterPatientsTrajectories_countDrugsInCluster", (DL_FUNC) &_ClusterPatientsTrajectories_countDrugsInCluster, 3},
    {"_ClusterPatientsTrajectories_normalize", (DL_FUNC) &_ClusterPatientsTrajectories_normalize, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_ClusterPatientsTrajectories(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
